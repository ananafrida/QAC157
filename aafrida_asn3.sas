/*1.Please write a SAS program to produce the following graph (this program should be the first part of the SAS file you submit via Moodle 
and should include all the necessary steps) */

LIBNAME TMP00001 "P:\QAC\qac157\data";

/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Sunday, April 2, 2023 at 8:22:09 PM
   By task: Bar Chart 1

   Input Data: P:\QAC\qac157\data\family63.sas7bdat
   Server:  Local
   ------------------------------------------------------------------- */

%_eg_conditional_dropds(WORK.SORTTempTableSorted,
		WORK.TRANSPOSETempTableTransposed);
/* -------------------------------------------------------------------
   Sort data set TMP00001.family63
   ------------------------------------------------------------------- */
PROC SORT
	DATA=TMP00001.family63
	OUT=WORK.SORTTempTableSorted
	;
	BY ID FS EDU AGE EXP M RACE REGION;
RUN;
	PATTERN1 COLOR=CX333399;
	PATTERN2 COLOR=CX993300;
	PATTERN3 COLOR=CX008080;
	PATTERN4 COLOR=OLIVE;
	PATTERN5 COLOR = _STYLE_;
	PATTERN6 COLOR = _STYLE_;
	PATTERN7 COLOR = _STYLE_;
	PATTERN8 COLOR = _STYLE_;
	PATTERN9 COLOR = _STYLE_;
	PATTERN10 COLOR = _STYLE_;
	PATTERN11 COLOR = _STYLE_;
	PATTERN12 COLOR = _STYLE_;
Legend1
	FRAME
	;
Axis1
	STYLE=1
	WIDTH=1
	MINOR=NONE
	LABEL=( JUSTIFY=LEFT   "Average")


;
Axis2
	STYLE=1
	WIDTH=1
	LABEL=(   "Variables")


;
Axis3

	LABEL=(   "Region")



;
TITLE;
TITLE1 "Regional Differences 1963";
FOOTNOTE;
FOOTNOTE1 "Region (1=Northeast 2=North Central 3=South 4=West)";
FOOTNOTE2 "Variables (E = Wages & Salaries, I = Income, S = Saving, W = Wealth)";
PROC TRANSPOSE 
DATA=WORK.SORTTempTableSorted 
	OUT=WORK.TRANSPOSETempTableTransposed
LET LABEL=VarLabel NAME=VarName; 
BY  ID FS EDU AGE EXP M RACE REGION ; 
RUN;
PROC GCHART DATA=WORK.TRANSPOSETempTableTransposed
;
	VBAR 
VarName /
SUMVAR=COL1	GROUP=REGION
	CLIPREF
FRAME	TYPE=MEAN
	MISSING
	LEGEND=LEGEND1
	COUTLINE=BLACK
	RAXIS=AXIS1
	MAXIS=AXIS2
	GAXIS=AXIS3
PATTERNID=GROUP
;
LABEL COL1="Measured Value" VarName="Variables";
/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted,
		WORK.TRANSPOSETempTableTransposed);
TITLE; FOOTNOTE;
PATTERN1;
PATTERN2;
PATTERN3;
PATTERN4;



/*2. Please write a program (should be the second part of the file you submit) 
to process these files as needed so that at the end you have all 
participants in a single file (long format) like this*/

/*importing cardioB as a stata file*/
PROC IMPORT OUT= WORK.cardioB 
            DATAFILE= "P:\QAC\qac157\STUDENTS\mkaparakis\Assignments\asgn3\cardioB.dta"
            DBMS=STATA REPLACE;
RUN;

/*transposing cardioB*/
Proc transpose data=cardioB out=B (drop=_label_) prefix=pu;
by id;
var t1pu t2pu t3pu t4pu t5pu;
Run;

/*importing cardioA as a txt file*/
PROC IMPORT OUT= WORK.cardioA
            DATAFILE= "P:\QAC\qac157\STUDENTS\mkaparakis\Assignments\asgn3\cardioA.txt" 
            DBMS=TAB REPLACE;
     GETNAMES=YES;
     DATAROW=2; 
RUN;

/*importing cardio_updates as an excel file*/
PROC IMPORT OUT= WORK.cardio_updates 
            DATAFILE= "P:\QAC\qac157\STUDENTS\mkaparakis\Assignments\asgn3\cardio_updates.xls" 
            DBMS=EXCEL REPLACE;
     GETNAMES=YES;
RUN;

/*updating cardioA from cardio_updates with the missing variables*/
data cardioA;
   update cardioA cardio_updates;
   by id;
run;

/*transposing cardioA*/
proc transpose data=cardioA out=A (drop=_label_) prefix=bp;
by id age;
var bp1 bp2 bp3 bp4 bp5;
Run;

/*importing cardioC as a txt tab delimited file*/
data cardioC;
	infile "P:\QAC\qac157\STUDENTS\mkaparakis\Assignments\asgn3\cardioC.txt" firstobs=2;
	input id   age     t     bp   pu ;
run;

/*merging transposed cardioA and cardioB*/
data M1;
	merge A (rename=(bp1=bp) )
		  B (rename=(pu1=pu) );
	by id;
	 *year=substr(_name_,5,2);  * year will be a string;
	 t=input(substr(_name_,2,1), 1.);
drop _name_;
run;

/*final merge with cardioC and others*/
data final;
   merge M1 (rename=(t=trial))
         cardioC  (rename=(t=trial));
   by id;
run;



/*3.In anticipation of the large data file let us put our understanding of arrays and do loops to work in this small data set. So, Please use arrays
and do loops to “automate” the creation of the dummy variables (i.e. create new variables that take the value one if bp”x”>=130 , zero otherwise).*/

PROC IMPORT OUT= WORK.bp 
            DATAFILE= "P:\QAC\qac157\STUDENTS\mkaparakis\Assignments\asgn3\bp.dta"
            DBMS=STATA REPLACE;
RUN;

/*creting new columns of dummy variable highbp for each trials*/
data highbp; set bp;

hipb1=.;
hipb2=.;
hipb3=.;
hipb4=.;
hipb5=.;

/*inserting values to the columns of highbp for each trial using loop and array*/
array quick1(*) hipb1 hipb2 hipb3 hipb4 hipb5;
array quick2(*) bp1 bp2 bp3 bp4 bp5;

do i=1 to dim(quick1);

  quick1(i)=(quick2(i)>=130);

end;

/*dropping i since it's irrelevant*/
drop i;

run;